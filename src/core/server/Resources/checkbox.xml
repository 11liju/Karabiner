<?xml version="1.0"?>
<root>
  <list>
    <item>
      <name>General</name>
      <list>
        <item>
          <name>Suppress Growl warning</name>
          <appendix>This option suppresses the warning: "Growl is not running"</appendix>
          <appendix></appendix>
          <appendix>If you want to suppress the Growl notification itself,</appendix>
          <appendix>disable the notification of KeyRemap4MacBook from Growl Preferences.</appendix>
          <identifier essential="true">general.suppress_growl_warning</identifier>
        </item>
        <item>
          <name>------------------------------------------------------------</name>
        </item>
        <item>
          <name>Don't remap an internal keyboard</name>
          <identifier essential="true">general.dont_remap_internal</identifier>
        </item>
        <item>
          <name>Don't remap external keyboards</name>
          <identifier essential="true">general.dont_remap_external</identifier>
        </item>
        <item>
          <name>Don't remap any pointing devices</name>
          <identifier essential="true">general.dont_remap_any_pointing</identifier>
        </item>
        <item>
          <name>Don't remap Apple's keyboards</name>
          <identifier essential="true">general.dont_remap_apple_keyboard</identifier>
        </item>
        <item>
          <name>Don't remap Apple's pointing devices</name>
          <identifier essential="true">general.dont_remap_apple_pointing</identifier>
        </item>
        <item>
          <name>Don't remap non-Apple's keyboards</name>
          <appendix>(For example: Generic USB keyboard)</appendix>
          <identifier essential="true">general.dont_remap_non_apple_keyboard</identifier>
        </item>
        <item>
          <name>Don't remap non-Apple's pointing devices</name>
          <appendix>(For example: Generic USB mouse)</appendix>
          <identifier essential="true">general.dont_remap_non_apple_pointing</identifier>
        </item>
        <item>
          <name>Don't remap keyboards which has third vendor's driver</name>
          <appendix>(Logitech, Microsoft, Kensington, ...)</appendix>
          <identifier essential="true">general.dont_remap_thirdvendor_keyboard</identifier>
        </item>
        <item>
          <name>Don't remap pointing devices which has third vendor's driver</name>
          <appendix>(Logitech, Microsoft, Kensington, ...)</appendix>
          <identifier essential="true">general.dont_remap_thirdvendor_pointing</identifier>
        </item>
        <item>
          <name>Excluding Devices</name>
          <list>
            <item>
              <name>Don't Remap Logitech Cordless Presenter</name>
              <identifier essential="true">general.dont_remap_logitech_cordless_presenter</identifier>
            </item>
          </list>
        </item>
        <item>
          <name>------------------------------------------------------------</name>
        </item>
        <item>
          <name>Pass-Through CapsLock LED status</name>
          <appendix>(Don't enable this when you use "XXX to CapsLock")</appendix>
          <identifier essential="true">general.passthrough_capslock_led_status</identifier>
        </item>
        <item>
          <name>------------------------------------------------------------</name>
        </item>
        <item>
          <name>Don't restore modifiers in the mouse event</name>
          <appendix></appendix>
          <appendix>For example, when you use Option+Tab to Command+Tab,</appendix>
          <appendix>we send "Command+Click" when you did a mouse click while</appendix>
          <appendix>pushing the Option key after you pushed Option+Tab.</appendix>
          <appendix>"Option+Click" should be output, but this option changes this behavior.</appendix>
          <identifier essential="true">general.lazy_modifiers_with_mouse_event</identifier>
        </item>
        <item>
          <name>------------------------------------------------------------</name>
        </item>
        <item>
          <name>Disable NumPad Hack</name>
          <appendix>(Don't change Fn+JKL.. to NumPad, and other Fn+key combinations)</appendix>
          <identifier essential="true">general.disable_numpad_hack</identifier>
        </item>
      </list>
    </item>

    <item>
      <name>Pass Through Mode (Disable all settings temporarily)</name>
      <list>
        <item>
          <!-- Pass Through Mode Core -->
          <name>What is Pass Through Mode?</name>
          <appendix>You can disable all settings temporarily.</appendix>
          <appendix>Turn on a setting below, and toggle "Pass Through Mode".</appendix>
          <identifier vk_config="true">notsave.passthrough</identifier>
          <autogen>--ShowStatusMessage-- Pass Through</autogen>
        </item>
        <item>
          <name>Change Fn+Escape to toggle "Pass Through Mode"</name>
          <identifier>passthrough.fnescape</identifier>
          <autogen>--KeyToKey-- KeyCode::ESCAPE, ModifierFlag::FN, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
        </item>
        <item>
          <name>Simultaneous Key Presses [Escape+Tab] to toggle "Pass Through Mode"</name>
          <identifier>passthrough.escapetab</identifier>
          <autogen>--SimultaneousKeyPresses-- KeyCode::ESCAPE, KeyCode::TAB, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
        </item>
        <item>
          <name>Holding Escape to toggle "Pass Through Mode"</name>
          <identifier>passthrough.holding_escape</identifier>
          <autogen>--HoldingKeyToKey-- KeyCode::ESCAPE, ModifierFlag::NONE, KeyCode::ESCAPE, KeyCode::VK_NONE, KeyCode::VK_LOCK_ALL_FORCE_OFF, KeyCode::VK_CONFIG_TOGGLE_notsave_passthrough</autogen>
        </item>
      </list>
    </item>

    <include system_xml_path="include/checkbox/pointing_device.xml" />

    <include system_xml_path="include/checkbox/standards/arrow.xml" />
    <include system_xml_path="include/checkbox/standards/backquote.xml" />
    <include system_xml_path="include/checkbox/standards/backslash.xml" />
    <include system_xml_path="include/checkbox/standards/bracket.xml" />
    <include system_xml_path="include/checkbox/standards/capslock.xml" />
    <include system_xml_path="include/checkbox/standards/command.xml" />
    <include system_xml_path="include/checkbox/standards/control.xml" />
    <include system_xml_path="include/checkbox/standards/delete.xml" />
    <include system_xml_path="include/checkbox/standards/eject.xml" />
    <include system_xml_path="include/checkbox/standards/enter.xml" />
    <include system_xml_path="include/checkbox/standards/escape.xml" />
    <include system_xml_path="include/checkbox/standards/expose.xml" />
    <include system_xml_path="include/checkbox/standards/fn.xml" />
    <include system_xml_path="include/checkbox/standards/forward_delete.xml" />
    <include system_xml_path="include/checkbox/standards/function.xml" />
    <include system_xml_path="include/checkbox/standards/help.xml" />
    <include system_xml_path="include/checkbox/standards/keypad.xml" />
    <include system_xml_path="include/checkbox/standards/minus.xml" />
    <include system_xml_path="include/checkbox/standards/number.xml" />
    <include system_xml_path="include/checkbox/standards/option.xml" />
    <include system_xml_path="include/checkbox/standards/pageup_pagedown.xml" />
    <include system_xml_path="include/checkbox/standards/return.xml" />
    <include system_xml_path="include/checkbox/standards/quote.xml" />
    <include system_xml_path="include/checkbox/standards/semicolon.xml" />
    <include system_xml_path="include/checkbox/standards/shift.xml" />
    <include system_xml_path="include/checkbox/standards/slash.xml" />
    <include system_xml_path="include/checkbox/standards/space.xml" />
    <include system_xml_path="include/checkbox/standards/tab.xml" />

    <include system_xml_path="include/checkbox/custom_shortcuts.xml" />
    <include system_xml_path="include/checkbox/diamond_cursor.xml" />
    <include system_xml_path="include/checkbox/browsing_mode.xml" />
    <include system_xml_path="include/checkbox/emacs_mode.xml" />
    <include system_xml_path="include/checkbox/mouse_keys.xml" />
    <include system_xml_path="include/checkbox/vi_mode.xml" />
    <include system_xml_path="include/checkbox/ubiquitous_vim_bindings.xml" />
    <include system_xml_path="include/checkbox/complete_vi_mode.xml" />
    <include system_xml_path="include/checkbox/simultaneouskeypresses_vi_mode.xml" />
    <include system_xml_path="include/checkbox/homerow_mode.xml" />
    <include system_xml_path="include/checkbox/simultaneouskeypresses.xml" />
    <include system_xml_path="include/checkbox/thumbsense.xml" />
    <include system_xml_path="include/checkbox/for_mission_control.xml" />

    <item>
      <name>For Applications</name>
      <list>
        <include system_xml_path="include/checkbox/apps/virtual_machine.xml" />
        <include system_xml_path="include/checkbox/apps/finder.xml" />
        <include system_xml_path="include/checkbox/apps/terminal.xml" />
        <include system_xml_path="include/checkbox/apps/adobe.xml" />
        <include system_xml_path="include/checkbox/apps/safari.xml" />
        <include system_xml_path="include/checkbox/apps/firefox.xml" />
        <include system_xml_path="include/checkbox/apps/office.xml" />
        <include system_xml_path="include/checkbox/apps/macsoup.xml" />
        <include system_xml_path="include/checkbox/apps/vienna.xml" />
        <include system_xml_path="include/checkbox/apps/gruml.xml" />
        <include system_xml_path="include/checkbox/apps/launchbar.xml" />
        <include system_xml_path="include/checkbox/apps/remote_desktop_client.xml" />
        <include system_xml_path="include/checkbox/apps/world_of_warcraft.xml" />
        <include system_xml_path="include/checkbox/apps/starcraft2.xml" />
        <include system_xml_path="include/checkbox/apps/skype.xml" />
        <include system_xml_path="include/checkbox/apps/dictionary.xml" />
        <include system_xml_path="include/checkbox/apps/tweetdeck.xml" />
        <include system_xml_path="include/checkbox/apps/quicksilver.xml" />
      </list>
    </item>

    <include system_xml_path="include/checkbox/keyboard_layouts.xml" />
    <include system_xml_path="include/checkbox/for_pc_users.xml" />
    <include system_xml_path="include/checkbox/for_dvorak_users.xml" />

    <include system_xml_path="include/checkbox/device_specific.xml" />

    <item>
      <name>For International English Keyboard and ISO Keyboard Users</name>
      <list>
        <item>
          <name>Improve ISO Keyboard Layout</name>
          <appendix>( '\' to additional Enter, '§' to '`' and '`' to '\' )</appendix>
          <identifier>remap.uk_saneuklayout</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Improve ISO Keyboard Layout (Option 2)</name>
          <appendix>( '§' to '`' and '`' to '\' )</appendix>
          <identifier>remap.uk_saneuklayout2</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Swap @ and double-quote(")</name>
          <identifier>remap.uk_swap_at_doublequote</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_SHIFT, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::QUOTE, VK_SHIFT, KeyCode::KEY_2, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Swap the Tilda(~) key with Section (§)</name>
          <identifier>remap.iso_swap_tilda_section</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE,  KeyCode::UK_SECTION</autogen>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Make Shift_R the Backslash (\)  and Backslash (\) into an extra Enter</name>
          <identifier>remap.iso_better_enter</identifier>
          <autogen>--KeyToKey-- KeyCode::SHIFT_R, KeyCode::BACKSLASH</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::ENTER</autogen>
        </item>
        <item>
          <name>Backquote(`) to Backslash(\)</name>
          <identifier>remap.uk_backquote2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Backquote(`) to Section(§)</name>
          <identifier>remap.uk_backquote2section</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::UK_SECTION</autogen>
        </item>
        <item>
          <name>Backquote(`) to Shift_L</name>
          <identifier>remap.uk_backquote2shiftL</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Backslash(\) to Option_L+3 (Hash #), Shift+Backslash(\) to Tilde(~)</name>
          <identifier>remap.uk_backslash2hash</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::KEY_3, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Forward Delete to Section(§)</name>
          <identifier>remap.uk_forwarddelete2section</identifier>
          <autogen>--KeyToKey-- FROMKEYCODE_FORWARD_DELETE, KeyCode::UK_SECTION</autogen>
        </item>
        <item>
          <name>Section(§) to Option_L+3 (Hash #), Shift+Section(§) to Tilde(~)</name>
          <identifier>remap.uk_section2hash</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, VK_SHIFT, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::KEY_3, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Section(§) to Command_L</name>
          <identifier>remap.section_to_command_l</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::COMMAND_L</autogen>
        </item>
        <item>
          <name>Section(§) to Control_L</name>
          <identifier>remap.section_to_control_l</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::CONTROL_L</autogen>
        </item>
        <item>
          <name>Section(§) to Option_L</name>
          <identifier>remap.section_to_option_l</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Section(§) to Shift_L</name>
          <identifier>remap.section_to_shift_l</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::SHIFT_L</autogen>
        </item>
        <item>
          <name>Section(§) to Backquote(`)</name>
          <identifier>remap.uk_section2backquote</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Section(§) to Backquote(`)</name>
          <appendix>(except virtual machine)</appendix>
          <identifier>remap.uk_section2backquote_ex_vm</identifier>
          <not>VIRTUALMACHINE</not>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKQUOTE</autogen>
        </item>
        <item>
          <name>Section(§) to Backslash(\)</name>
          <identifier>remap.uk_section2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::BACKSLASH</autogen>
        </item>
        <item>
          <name>Section(§) to Forward Delete</name>
          <identifier>remap.uk_section2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Section(§) to LeftClick</name>
          <identifier>remap.strangekey_to_leftclick</identifier>
          <autogen>--KeyToPointingButton-- KeyCode::UK_SECTION, PointingButton::LEFT</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For Belgian</name>
      <list>
        <item>
          <name>Change KeyPad Comma(,) to Dot(.)</name>
          <identifier>remap.belgian_keypad_comma_to_dot</identifier>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, KeyCode::KEYPAD_DOT, ModifierFlag::SHIFT_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For Bulgarian</name>
      <list>
        <item>
          <name>Change underscore(_) on Japanese keyboard to ч</name>
          <appendix>(For Bulgarian-Phonetic)</appendix>
          <identifier>remap.bulgarian_jis_underscore_to_backquote</identifier>
          <inputmode_only>BULGARIAN</inputmode_only>
          <autogen>--KeyToKey-- KeyCode::JIS_UNDERSCORE, KeyCode::BACKQUOTE</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For Canadian</name>
      <list>
        <item>
          <name>Space to Option_L (when inputmode == canadian)</name>
          <identifier>remap.canadian_space2optionL</identifier>
          <inputmode_only>CANADIAN</inputmode_only>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Space to Option_L (when inputmode == canadian)</name>
          <appendix>(+ When you type Space only, send Space)</appendix>
          <identifier>remap.canadian_space2optionL_space</identifier>
          <inputmode_only>CANADIAN</inputmode_only>
          <autogen>--KeyOverlaidModifier-- KeyCode::SPACE, KeyCode::OPTION_L, KeyCode::SPACE</autogen>
        </item>
        <item>
          <name>Synchronize the sign of the keyboard and an input letter</name>
          <appendix>using "U.S. International - PC" as Input Source on Canadian French keyboard.</appendix>
          <appendix>(For example, change Shift+6 to ?)</appendix>
          <identifier>remap.use_us_international_on_canadian_french_keyboard</identifier>
          <!-- / -->
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, ModifierFlag::NONE,           KeyCode::SLASH</autogen>
          <!-- \ -->
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, ModifierFlag::NONE|VK_SHIFT,  KeyCode::BACKSLASH</autogen>
          <!-- | -->
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, ModifierFlag::NONE|VK_OPTION, KeyCode::BACKSLASH, ModifierFlag::SHIFT_L</autogen>

          <!-- ? -->
          <autogen>--KeyToKey-- KeyCode::KEY_6,      ModifierFlag::NONE|VK_SHIFT,  KeyCode::SLASH, VK_SHIFT</autogen>
          <!-- { -->
          <autogen>--KeyToKey-- KeyCode::KEY_7,      ModifierFlag::NONE|VK_OPTION, KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L</autogen>
          <!-- } -->
          <autogen>--KeyToKey-- KeyCode::KEY_8,      ModifierFlag::NONE|VK_OPTION, KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L</autogen>
          <!-- [ -->
          <autogen>--KeyToKey-- KeyCode::KEY_9,      ModifierFlag::NONE|VK_OPTION, KeyCode::BRACKET_LEFT</autogen>
          <!-- ] -->
          <autogen>--KeyToKey-- KeyCode::KEY_0,      ModifierFlag::NONE|VK_OPTION, KeyCode::BRACKET_RIGHT</autogen>
          <!-- ¬ -->
          <autogen>--KeyToKey-- KeyCode::EQUAL,      ModifierFlag::NONE|VK_OPTION, KeyCode::L, ModifierFlag::OPTION_L</autogen>

          <!-- ============================================================ -->

          <!-- ^ (accent) -->
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, ModifierFlag::NONE,           KeyCode::I, ModifierFlag::OPTION_L</autogen>
          <!-- " (accent) -->
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, ModifierFlag::NONE|VK_SHIFT,  KeyCode::U, ModifierFlag::OPTION_L</autogen>
          <!-- ` (accent) -->
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, ModifierFlag::NONE|VK_OPTION, KeyCode::BACKQUOTE, VK_OPTION</autogen>

          <!-- ============================================================ -->

          <!-- ° -->
          <autogen>--KeyToKey-- KeyCode::SEMICOLON,     ModifierFlag::NONE|VK_OPTION, KeyCode::KEY_8, VK_OPTION | ModifierFlag::SHIFT_L</autogen>

          <!-- ç -->
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, ModifierFlag::NONE,           KeyCode::C, ModifierFlag::OPTION_L</autogen>
          <!-- Ç -->
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, ModifierFlag::NONE|VK_SHIFT,  KeyCode::C, ModifierFlag::OPTION_L | VK_SHIFT</autogen>
          <!-- ~ -->
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, ModifierFlag::NONE|VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L</autogen>

          <!-- è -->
          <autogen>--KeyToKey-- KeyCode::QUOTE,         ModifierFlag::NONE,          KeyCode::BACKQUOTE, KeyCode::E</autogen>
          <!-- È -->
          <autogen>--KeyToKey-- KeyCode::QUOTE,         ModifierFlag::NONE|VK_SHIFT, KeyCode::BACKQUOTE, KeyCode::E, VK_SHIFT</autogen>

          <!-- à -->
          <autogen>--KeyToKey-- KeyCode::BACKSLASH,     ModifierFlag::NONE, KeyCode::BACKQUOTE, KeyCode::A</autogen>
          <!-- à -->
          <autogen>--KeyToKey-- KeyCode::BACKSLASH,     ModifierFlag::NONE|VK_SHIFT, KeyCode::BACKQUOTE, KeyCode::A, VK_SHIFT</autogen>

          <!-- ============================================================ -->

          <!-- ù -->
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::NONE,          KeyCode::BACKQUOTE, KeyCode::U</autogen>
          <!-- Ù -->
          <autogen>--KeyToKey-- KeyCode::BACKQUOTE, ModifierFlag::NONE|VK_SHIFT, KeyCode::BACKQUOTE, KeyCode::U, VK_SHIFT</autogen>

          <!-- « -->
          <autogen>--KeyToKey-- KeyCode::Z,     ModifierFlag::NONE|VK_OPTION, KeyCode::BACKSLASH, VK_OPTION</autogen>

          <!-- » -->
          <autogen>--KeyToKey-- KeyCode::X,     ModifierFlag::NONE|VK_OPTION, KeyCode::BACKSLASH, VK_OPTION | ModifierFlag::SHIFT_L</autogen>

          <!-- ' -->
          <autogen>--KeyToKey-- KeyCode::COMMA, ModifierFlag::NONE|VK_SHIFT, KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>
          <!-- < -->
          <autogen>--KeyToKey-- KeyCode::COMMA, ModifierFlag::NONE|VK_OPTION, KeyCode::COMMA, ModifierFlag::SHIFT_L</autogen>

          <!-- " -->
          <autogen>--KeyToKey-- KeyCode::DOT,   ModifierFlag::NONE|VK_SHIFT, KeyCode::QUOTE, ModifierFlag::SHIFT_L</autogen>

          <!-- > -->
          <autogen>--KeyToKey-- KeyCode::DOT,   ModifierFlag::NONE|VK_OPTION, KeyCode::DOT, ModifierFlag::SHIFT_L</autogen>

          <!-- é -->
          <autogen>--KeyToKey-- KeyCode::SLASH, ModifierFlag::NONE,          KeyCode::QUOTE, KeyCode::E</autogen>
          <!-- é -->
          <autogen>--KeyToKey-- KeyCode::SLASH, ModifierFlag::NONE|VK_SHIFT, KeyCode::QUOTE, KeyCode::E, VK_SHIFT</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Czech</name>
      <list>
        <item>
          <name>Remap keyboard (symbol) shortcuts to standard Windows/Linux style</name>
          <appendix></appendix>
          <appendix>Remap keyboard shortcuts on czech keyboard layout to behave like in Windows with AltGr.</appendix>
          <appendix>Recommended: remap your modifier keys under System Preferences-Keyboard-Modifier Keys</appendix>
          <appendix>under Keyboard Tab</appendix>
          <appendix>Notice: Disabled for X11 - you have to use xmodmap (use xev to get kb codes) under</appendix>
          <appendix>xterm in X11</appendix>
          <appendix></appendix>
          <appendix>Control_R (AltGr) + V = @ ... Control_R (AltGr) + C = &amp;</appendix>
          <appendix>Control_R (AltGr) + W = | ... Control_R (AltGr) + E = €</appendix>
          <appendix>Control_R (AltGr) + B = { ... Control_R (AltGr) + N = }</appendix>
          <appendix>Control_R (AltGr) + F = [ ... Control_R (AltGr) + G = ]</appendix>
          <appendix>Control_R (AltGr) + ů = $ ... Control_R (AltGr) + X = #</appendix>
          <appendix>Control_R (AltGr) + A = ~ ... Control_R (AltGr) + Q = \</appendix>
          <appendix>Control_R (AltGr) + , = &lt; ... Control_R (AltGr) + . = &gt;</appendix>
          <appendix>Control_R (AltGr) + - = * ... "key under esc" to ;</appendix>
          <identifier>remap.czech_win_shortcuts</identifier>
          <not>X11</not>
          <autogen>--KeyToKey-- KeyCode::DOT, ModifierFlag::CONTROL_R, KeyCode::DOT, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::COMMA, ModifierFlag::CONTROL_R, KeyCode::COMMA, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::CONTROL_R, KeyCode::KEY_2, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::CONTROL_R, KeyCode::KEY_4, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::SLASH, ModifierFlag::CONTROL_R, KeyCode::KEY_8, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::CONTROL_R, KeyCode::KEY_5, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::CONTROL_R, KeyCode::KEY_7, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::CONTROL_R, KeyCode::KEY_3, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::CONTROL_R, KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::CONTROL_R, KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::CONTROL_R, KeyCode::R, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::CONTROL_R, KeyCode::KEY_9, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::N, ModifierFlag::CONTROL_R, KeyCode::KEY_0, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::CONTROL_R, KeyCode::RUSSIAN_TILDE, ModifierFlag::SHIFT_R</autogen>
          <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::CONTROL_R, KeyCode::RUSSIAN_TILDE</autogen>
          <!-- only on Internal Apple keyboard -->
          <!-- because on Apple internal is swapped keycode with "key in front of Shift_L" and "key under escape" -->
          <block>
            <device_only>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0237</device_only>
            <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::CONTROL_R</autogen>
            <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::SEMICOLON, ModifierFlag::OPTION_R</autogen>
          </block>
          <!-- only on external keyboard -->
          <block>
            <device_not>DeviceVendor::APPLE_COMPUTER,DeviceProduct::APPLE_INTERNAL_KEYBOARD_TRACKPAD_0x0237</device_not>
            <autogen>--KeyToKey-- KeyCode::RUSSIAN_TILDE, KeyCode::SEMICOLON, ModifierFlag::OPTION_R</autogen>
            <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::RUSSIAN_TILDE</autogen>
          </block>
        </item>
      </list>
    </item>
    <item>
      <name>For Finnish</name>
      <list>
        <item>
          <name>Command_L+Shift_L to Command_L+Shift_L (when inputmode == finnish)</name>
          <appendix>(+ When you type Command_L+Shift_L only, change inputmode to english)</appendix>
          <inputmode_only>FINNISH</inputmode_only>
          <identifier>remap.finnish_shiftcommandL2shiftLcommandL_english</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, VK_SHIFT, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
        </item>
        <item>
          <name>Command_L+Shift_L to Command_L+Shift_L</name>
          <appendix>(+ When you type Command_L+Shift_L only, change inputmode to finnish)</appendix>
          <!-- <inputmode_only>ENGLISH</inputmode_only> -->
          <identifier>remap.finnish_shiftcommandL2shiftLcommandL_finnish</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_FINNISH</autogen>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, VK_SHIFT, KeyCode::COMMAND_L, ModifierFlag::SHIFT_L, KeyCode::VK_CHANGE_INPUTMODE_FINNISH</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For French</name>
      <list>
        <item>
          <name>Change KeyPad Comma(,) to Dot(.)</name>
          <identifier>remap.french_keypad_comma_to_dot</identifier>
          <inputmode_only>FRENCH</inputmode_only>
          <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, KeyCode::KEYPAD_DOT, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Swap $ and € on French</name>
          <identifier>remap.french_swap_dollar_and_euro</identifier>
          <inputmode_only>FRENCH</inputmode_only>
          <autogen>--KeyToKey-- KeyCode::FRENCH_DOLLAR, ModifierFlag::NONE,
            KeyCode::FRENCH_DOLLAR, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_DOLLAR, VK_OPTION | ModifierFlag::NONE,
            KeyCode::FRENCH_DOLLAR</autogen>
        </item>
        <item>
          <name>Shift_L to Shift_L</name>
          <appendix>(+ When you type Shift_L only, send Backslash)</appendix>
          <identifier>remap.french_shiftL2shiftL_backslash</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::DOT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Shift_R to Shift_R</name>
          <appendix>(+ When you type Shift_R only, send Backslash)</appendix>
          <identifier>remap.french_shiftR2shiftR_backslash</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::DOT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Option+Shift+4 to Left Brace, Option+Shift+Minus to Right Brace</name>
          <appendix>Option+5 to Quote, Option+Right Paren to Minus</appendix>
          <identifier>remap.french_swap_brackets_and_braces</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_4,        VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_MINUS, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::FRENCH_RIGHT_PAREN, ModifierFlag::OPTION_L</autogen>

          <autogen>--KeyToKey-- KeyCode::KEY_5,              VK_OPTION | ModifierFlag::NONE, KeyCode::KEY_4, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_RIGHT_PAREN, VK_OPTION | ModifierFlag::NONE, KeyCode::FRENCH_MINUS, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Make MacBook AZERTY closer to the standard latin-9 mapping</name>
          <appendix>(For "French - Numerical" users)</appendix>
          <identifier>remap.french_azerty_to_latin9</identifier>
          <!-- - the key -/_ (where you put the brace), I would like to be =/+, that is, = on normal and + on SHIFT; -->
          <autogen>--KeyToKey-- KeyCode::FRENCH_MINUS, ModifierFlag::NONE, KeyCode::FRENCH_EQUAL</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_MINUS, VK_SHIFT | ModifierFlag::NONE, KeyCode::FRENCH_EQUAL, ModifierFlag::SHIFT_L</autogen>
          <!-- - the key 6, I would like to do -/6/|  (normal -, SHIFT 6, ALT+SHIFT |) -->
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::FRENCH_MINUS</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_6, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
          <!-- - the key =/+ I would like to be §/! -->
          <autogen>--KeyToKey-- KeyCode::FRENCH_EQUAL, ModifierFlag::NONE, KeyCode::KEY_6</autogen>
          <autogen>--KeyToKey-- KeyCode::FRENCH_EQUAL, VK_SHIFT | ModifierFlag::NONE, KeyCode::KEY_8</autogen>
          <!-- - ALT+SHIFT+2 gives ~ -->
          <autogen>--KeyToKey-- KeyCode::KEY_2, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::N, ModifierFlag::OPTION_L</autogen>
          <!-- - ALT+SHIFT+3 gives # -->
          <autogen>--KeyToKey-- KeyCode::KEY_3, VK_OPTION | VK_SHIFT | ModifierFlag::NONE, KeyCode::BACKSLASH, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Forgiving open brackets binding.</name>
          <appendix>Command+4 to Left Brace, Command+5 to Left Bracket</appendix>
          <identifier>remap.french_brackets_hack</identifier>
          <!-- command+4 to { -->
          <autogen>--KeyToKey-- KeyCode::KEY_4, VK_COMMAND | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
          <!-- command+5 to [ -->
          <autogen>--KeyToKey-- KeyCode::KEY_5, VK_COMMAND | ModifierFlag::NONE, KeyCode::KEY_5, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command_L+Circonflexe(^) to ´(Option+Shift+1)</name>
          <identifier>remap.french_commandLhat2optionshift1</identifier>
          <autogen>--KeyToKey-- KeyCode::FRENCH_HAT, ModifierFlag::COMMAND_L | ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Command_R+Circonflexe(^) to ´(Option+Shift+1)</name>
          <identifier>remap.french_commandRhat2optionshift1</identifier>
          <autogen>--KeyToKey-- KeyCode::FRENCH_HAT, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::KEY_1, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Dvorak and bépo: Command_R to Option_R</name>
          <identifier>remap.french_inputmode_dvorak_bepo_command_r_to_option_r</identifier>
          <inputmode_only>DVORAK,BEPO</inputmode_only>
          <autogen>--KeyToKey-- KeyCode::COMMAND_R, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>French PC keyboard layout</name>
          <appendix>Change 6 to -</appendix>
          <appendix>Change 8 to _</appendix>
          <appendix>...</appendix>
          <identifier>remap.pc_french_keyboard_layout</identifier>
          <!-- KEY_6 to '-' -->
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::NONE, KeyCode::EQUAL</autogen>
          <!-- KEY_8 to '_' -->
          <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::NONE, KeyCode::EQUAL, ModifierFlag::SHIFT_R</autogen>
          <!-- EQUAL to '=' -->
          <autogen>--KeyToKey-- KeyCode::EQUAL, ModifierFlag::NONE, KeyCode::SLASH, ModifierFlag::NONE</autogen>
          <!-- EQUAL + Right Shift to '+' -->
          <autogen>--KeyToKey-- KeyCode::EQUAL, ModifierFlag::SHIFT_R, KeyCode::SLASH, ModifierFlag::SHIFT_R</autogen>
          <!-- ExclamationMark(SLASH) to '!' -->
          <autogen>--KeyToKey-- KeyCode::SLASH, ModifierFlag::NONE, KeyCode::KEY_8, ModifierFlag::NONE</autogen>
          <!-- MultiplySign(BackSlash) to '*' -->
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, ModifierFlag::NONE, KeyCode::KEYPAD_MULTIPLY, ModifierFlag::NONE</autogen>
          <!-- KEY_2 + AltGr to '~' -->
          <autogen>--KeyToKey-- KeyCode::KEY_2, ModifierFlag::OPTION_R, KeyCode::N, ModifierFlag::OPTION_R</autogen>
          <!-- KEY_3 + AltGr to '#' -->
          <autogen>--KeyToKey-- KeyCode::KEY_3, ModifierFlag::OPTION_R, KeyCode::UK_SECTION, ModifierFlag::SHIFT_R</autogen>
          <!-- KEY_4 + AltGr to '{' -->
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::OPTION_R, KeyCode::KEY_5, ModifierFlag::OPTION_R</autogen>
          <!-- KEY_5 + AltGr to '[' -->
          <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::OPTION_R, KeyCode::KEY_5, ModifierFlag::OPTION_R | ModifierFlag::SHIFT_R</autogen>
          <!-- KEY_6 + AltGr to '|' -->
          <autogen>--KeyToKey-- KeyCode::KEY_6, ModifierFlag::OPTION_R, KeyCode::L, ModifierFlag::OPTION_R | ModifierFlag::SHIFT_R</autogen>
          <!-- KEY_7 + AltGr to '`' -->
          <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::OPTION_R, KeyCode::BACKSLASH</autogen>
          <!-- KEY_8 + AltGr to '\' -->
          <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::OPTION_R, KeyCode::DOT, ModifierFlag::OPTION_R | ModifierFlag::SHIFT_R</autogen>
          <!-- KEY_0 + AltGr to '@' -->
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::OPTION_R, KeyCode::UK_SECTION, ModifierFlag::NONE</autogen>
          <!-- MINUS + AltGr to ']' -->
          <autogen>--KeyToKey-- KeyCode::MINUS, ModifierFlag::OPTION_R, KeyCode::MINUS, ModifierFlag::OPTION_R | ModifierFlag::SHIFT_R</autogen>
          <!-- EQUAL + AltGr to '}' -->
          <autogen>--KeyToKey-- KeyCode::EQUAL, ModifierFlag::OPTION_R, KeyCode::MINUS, ModifierFlag::OPTION_R</autogen>
          <!-- KEYPAD_DOT to '.' -->
          <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, ModifierFlag::NONE, KeyCode::COMMA, ModifierFlag::SHIFT_R</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For German</name>
      <list>
        <item>
          <name>Adapt Option_R to PC's AltGr (1)</name>
          <identifier>remap.german_adapt_option_r_to_pcs_altgr_1</identifier>
          <appendix>---------------------------------------</appendix>
          <appendix>Change Option_R+7 to {</appendix>
          <appendix>Change Option_R+8 to [</appendix>
          <appendix>Change Option_R+9 to ]</appendix>
          <appendix>Change Option_R+0 to }</appendix>
          <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::OPTION_R, KeyCode::KEY_5, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::OPTION_R, KeyCode::KEY_6, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_7, ModifierFlag::OPTION_R, KeyCode::KEY_8, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::KEY_0, ModifierFlag::OPTION_R, KeyCode::KEY_9, ModifierFlag::OPTION_R</autogen>
          <appendix>---------------------------------------</appendix>
        </item>
        <item>
          <name>Adapt Option_R to PC's AltGr (2)</name>
          <identifier>remap.german_adapt_option_r_to_pcs_altgr_2</identifier>
          <appendix>Change Option_R+'Q' to Option_R+'L' ( '@' )</appendix>
          <appendix>Change Option_R+'+' to Option_R+'N' ( '~' )</appendix>
          <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::OPTION_R, KeyCode::L, ModifierFlag::OPTION_R</autogen>
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_R, KeyCode::N, ModifierFlag::OPTION_R</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Option+7 to {</name>
          <identifier>remap.german_option7_to_left_brace</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_7, VK_OPTION, KeyCode::KEY_8, VK_OPTION</autogen>
        </item>
        <item>
          <name>Option+8 to [</name>
          <identifier>remap.german_option8_to_left_bracket</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_8, VK_OPTION, KeyCode::KEY_5, VK_OPTION</autogen>
        </item>
        <item>
          <name>Option+9 to ]</name>
          <identifier>remap.german_option9_to_right_bracket</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_9, VK_OPTION, KeyCode::KEY_6, VK_OPTION</autogen>
        </item>
        <item>
          <name>Option+0 to }</name>
          <identifier>remap.german_option0_to_right_brace</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_0, VK_OPTION, KeyCode::KEY_9, VK_OPTION</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Control+Ö to {</name>
          <identifier>remap.german_controlO_to_left_brace</identifier>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_CONTROL, KeyCode::KEY_8, VK_OPTION</autogen>
        </item>
        <item>
          <name>Command+Ö to [</name>
          <identifier>remap.german_commandO_to_left_bracket</identifier>
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_COMMAND, KeyCode::KEY_5, VK_OPTION</autogen>
        </item>
        <item>
          <name>Command+Ä to ]</name>
          <identifier>remap.german_commandA_to_right_bracket</identifier>
          <autogen>--KeyToKey-- KeyCode::QUOTE, VK_COMMAND, KeyCode::KEY_6, VK_OPTION</autogen>
        </item>
        <item>
          <name>Control+Ä to }</name>
          <identifier>remap.german_controlA_to_left_brace</identifier>
          <autogen>--KeyToKey-- KeyCode::QUOTE, VK_CONTROL, KeyCode::KEY_9, VK_OPTION</autogen>
        </item>
        <item><name>------------------------------------------------------------</name></item>
        <item>
          <name>Control+PLUS to ~</name>
          <identifier>remap.german_controlPlus_to_tilde</identifier>
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, VK_CONTROL, KeyCode::N, VK_OPTION</autogen>
        </item>
        <item>
          <name>Option+PLUS to ~</name>
          <identifier>remap.german_optionPlus_to_tilde</identifier>
          <autogen>--KeyToKey-- KeyCode::BRACKET_RIGHT, VK_OPTION, KeyCode::N, VK_OPTION</autogen>
        </item>
        <item>
          <name>Command+MINUS to Backslash(\)</name>
          <identifier>remap.german_commandMinus_to_backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::SLASH, VK_COMMAND, KeyCode::KEY_7, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Control+MINUS to Slash(/)</name>
          <identifier>remap.german_controlMinus_to_slash</identifier>
          <autogen>--KeyToKey-- KeyCode::SLASH, VK_CONTROL, KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Option+ß to Backslash(\)</name>
          <identifier>remap.german_optionbeta2backslash</identifier>
          <autogen>--KeyToKey-- KeyCode::MINUS, VK_OPTION, KeyCode::KEY_7, ModifierFlag::SHIFT_L | VK_OPTION</autogen>
        </item>
        <item>
          <name>Option+Q to @</name>
          <identifier>remap.german_optionQ2atmark</identifier>
          <autogen>--KeyToKey-- KeyCode::Q, VK_OPTION, KeyCode::L, VK_OPTION</autogen>
        </item>
        <item>
          <name>Quote(´) to Forward Delete</name>
          <identifier>remap.german_quote2forwarddelete</identifier>
          <autogen>--KeyToKey-- KeyCode::GERMAN_QUOTE, KeyCode::FORWARD_DELETE</autogen>
        </item>
        <item>
          <name>Command+Ü to |</name>
          <identifier>remap.german_commandU2pipe</identifier>
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_COMMAND, KeyCode::KEY_7, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Control+Ü to @</name>
          <identifier>remap.german_controlU2atmark</identifier>
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::L, ModifierFlag::OPTION_L</autogen>
        </item>
        <item>
          <name>Option+Less-Than(&lt;) to |</name>
          <identifier>remap.german_optionLessthan_to_pipe</identifier>
          <autogen>--KeyToKey-- KeyCode::GERMAN_LESS_THAN, VK_OPTION, KeyCode::KEY_7, VK_OPTION</autogen>
        </item>
        <item>
          <name>Swap Circumflex(^) and Less-Than(&lt;)</name>
          <identifier>remap.german_swap_circumflex_lessthan</identifier>
          <autogen>--KeyToKey-- KeyCode::GERMAN_CIRCUMFLEX, KeyCode::GERMAN_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::GERMAN_LESS_THAN, KeyCode::GERMAN_CIRCUMFLEX</autogen>
        </item>
        <item>
          <name>Swap Circumflex(^) and Less-Than(&lt;)</name>
          <appendix>(only in virtual machine)</appendix>
          <identifier>remap.german_swap_circumflex_lessthan_vm</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>--KeyToKey-- KeyCode::GERMAN_CIRCUMFLEX, KeyCode::GERMAN_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::GERMAN_LESS_THAN, KeyCode::GERMAN_CIRCUMFLEX</autogen>
        </item>
        <item>
          <name>Swap Circumflex(^) and Less-Than(&lt;) on PC Keyboard</name>
          <appendix>(+ Option+Less-Than(&lt;) to Pipe(|))</appendix>
          <identifier>remap.german_swap_circumflex_lessthan_pckeyboard</identifier>
          <not>VIRTUALMACHINE</not>
          <autogen>--KeyToKey-- KeyCode::GERMAN_PC_LESS_THAN, VK_OPTION | ModifierFlag::NONE,
            KeyCode::KEY_7, VK_OPTION</autogen>
          <autogen>--KeyToKey-- KeyCode::GERMAN_PC_LESS_THAN, KeyCode::GERMAN_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::GERMAN_LESS_THAN,    KeyCode::GERMAN_CIRCUMFLEX</autogen>
        </item>
        <item>
          <name>Change Command+Q to @ (Option_L+L)</name>
          <list>
            <item>
              <name>Command_L+Q to @</name>
              <identifier>remap.german_commandLQ2optionLL</identifier>
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_L, KeyCode::L, ModifierFlag::OPTION_L</autogen>
            </item>
            <item>
              <name>Command_R+Q to @</name>
              <identifier>remap.german_commandRQ2optionLL</identifier>
              <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::COMMAND_R, KeyCode::L, ModifierFlag::OPTION_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>map Developer Keyboard Layout</name>
          <list>
            <item>
              <name>map square bracket to PC Layout</name>
              <appendix>move Command_R + 8 to Option_L + 5</appendix>
              <appendix>move Command_R + 9 to Option_L + 6</appendix>
              <identifier>remap.german_map_square_bracket</identifier>
              <autogen>--KeyToKey-- KeyCode::KEY_8, ModifierFlag::COMMAND_R, KeyCode::KEY_5, ModifierFlag::OPTION_L</autogen>
              <autogen>--KeyToKey-- KeyCode::KEY_9, ModifierFlag::COMMAND_R, KeyCode::KEY_6, ModifierFlag::OPTION_L</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>NEO Keyboard Layout Fixes</name>
          <appendix>BACKSLASH (#) to OPTION_R</appendix>
          <appendix></appendix>
          <appendix>// To change CAPSLOCK to OPTION_L,</appendix>
          <appendix>// install PCKeyboardHack and change CapsLock keycode to 58.</appendix>
          <identifier>remap.german_neo</identifier>
          <autogen>--KeyToKey-- KeyCode::BACKSLASH, KeyCode::OPTION_R</autogen>
        </item>
        <item>
          <name>Umlaute 4 Programmierung umschreiben</name>
          <appendix>ä to ae</appendix>
          <appendix>ö to oe</appendix>
          <appendix>ü to ue</appendix>
          <identifier>remap.german_a_to_ae</identifier>
          <!-- ä to ae -->
          <autogen>--KeyToKey-- KeyCode::QUOTE,           KeyCode::A,           KeyCode::E</autogen>
          <!-- Ä to AE -->
          <autogen>--KeyToKey-- KeyCode::QUOTE, VK_SHIFT, KeyCode::A, VK_SHIFT, KeyCode::E, VK_SHIFT</autogen>
          <!-- ö to oe -->
          <autogen>--KeyToKey-- KeyCode::SEMICOLON,           KeyCode::O,           KeyCode::E</autogen>
          <!-- Ö to OE -->
          <autogen>--KeyToKey-- KeyCode::SEMICOLON, VK_SHIFT, KeyCode::O, VK_SHIFT, KeyCode::E, VK_SHIFT</autogen>
          <!-- ü to ue -->
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT,           KeyCode::U,           KeyCode::E</autogen>
          <!-- Ü to UE -->
          <autogen>--KeyToKey-- KeyCode::BRACKET_LEFT, VK_SHIFT, KeyCode::U, VK_SHIFT, KeyCode::E, VK_SHIFT</autogen>
        </item>
        <item>
          <name>German Umlaute on US Keyboard Layout</name>
          <appendix>Change Option_R+; to ö</appendix>
          <appendix>Change Option_R+' to ä</appendix>
          <appendix>Change Option_R+[ to ü</appendix>
          <appendix>Change Option_R+- to ß</appendix>
          <identifier>remap.org.openhort.german_umlaute_on_en_US</identifier>

          <autogen>--KeyToKey--
            KeyCode::SEMICOLON, ModifierFlag::OPTION_R | VK_SHIFT | ModifierFlag::NONE,
            KeyCode::U, ModifierFlag::OPTION_R, KeyCode::O, VK_SHIFT
          </autogen>
          <autogen>--KeyToKey--
            KeyCode::SEMICOLON, ModifierFlag::OPTION_R | ModifierFlag::NONE,
            KeyCode::U, ModifierFlag::OPTION_R, KeyCode::O
          </autogen>

          <autogen>--KeyToKey--
            KeyCode::QUOTE, ModifierFlag::OPTION_R | VK_SHIFT | ModifierFlag::NONE,
            KeyCode::U, ModifierFlag::OPTION_R, KeyCode::A, VK_SHIFT
          </autogen>
          <autogen>--KeyToKey--
            KeyCode::QUOTE, ModifierFlag::OPTION_R | ModifierFlag::NONE,
            KeyCode::U, ModifierFlag::OPTION_R, KeyCode::A
          </autogen>

          <autogen>--KeyToKey--
            KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_R | VK_SHIFT | ModifierFlag::NONE,
            KeyCode::U, ModifierFlag::OPTION_R, KeyCode::U, VK_SHIFT
          </autogen>
          <autogen>--KeyToKey--
            KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_R | ModifierFlag::NONE,
            KeyCode::U, ModifierFlag::OPTION_R, KeyCode::U
          </autogen>

          <autogen>--KeyToKey--
            KeyCode::MINUS, ModifierFlag::OPTION_R | ModifierFlag::NONE,
            KeyCode::S, ModifierFlag::OPTION_R
          </autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Italian</name>
      <list>
        <item>
          <name>Exchange Backslash(\) and Less-Than(&lt;)</name>
          <identifier>remap.italian_exchange_backslash_less_than</identifier>
          <autogen>--KeyToKey-- KeyCode::ITALIAN_BACKSLASH, KeyCode::ITALIAN_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::ITALIAN_LESS_THAN, KeyCode::ITALIAN_BACKSLASH</autogen>
        </item>
        <item>
          <name>Option+AEIUO to àèìùò on "Italian Input Source"</name>
          <identifier>remap.italian_optionAEIUO_grave_italian</identifier>
          <autogen>--KeyToKey-- KeyCode::A, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::A</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::I, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::U, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::O, VK_OPTION, KeyCode::KEY_0, ModifierFlag::OPTION_L, KeyCode::O</autogen>
        </item>
        <item>
          <name>Option+AEIUO to àèìùò on "U.S. Input Source"</name>
          <identifier>remap.italian_optionAEIUO_grave_us</identifier>
          <autogen>--KeyToKey-- KeyCode::A, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::A</autogen>
          <autogen>--KeyToKey-- KeyCode::E, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::E</autogen>
          <autogen>--KeyToKey-- KeyCode::I, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::I</autogen>
          <autogen>--KeyToKey-- KeyCode::U, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::U</autogen>
          <autogen>--KeyToKey-- KeyCode::O, VK_OPTION, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L, KeyCode::O</autogen>
        </item>
        <item>
          <name>KeyPad Comma(,) to Dot(.) on "Italian Pro Input Source"</name>
          <identifier>remap.italian_keypadcomma2dot</identifier>
          <!-- ITALIAN_KEYPAD_COMMA is 0x41 (== KEYPAD_DOT) -->
          <autogen>--KeyToKey-- KeyCode::KEYPAD_DOT, KeyCode::DOT</autogen>
        </item>
      </list>
    </item>
    <include system_xml_path="include/checkbox/languages/japanese.xml" />
    <item>
      <name>For Korean</name>
      <list>
        <item>
          <name>Change HanEng And Hanja Key</name>
          <list>
            <item>
              <name>Toggle HanEng Key(to Command_L(R)+Space)</name>
              <identifier>remap.ksc_haneng2commandLSpace</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_KANA, KeyCode::COMMAND_L, KeyCode::SPACE, ModifierFlag::COMMAND_R</autogen>
            </item>
            <item>
              <name>Toggle Hanja Key(to Option_L(R)+Return)</name>
              <identifier>remap.ksc_hanja2optionLreturn</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::JIS_EISUU, KeyCode::OPTION_L, KeyCode::RETURN, ModifierFlag::OPTION_R</autogen>
            </item>
            <item>
              <name>Toggle Option_R(Alt_R) Key(to Option_L(R)+Enter)</name>
              <identifier>remap.ksc_optionR2optionLreturn</identifier>
              <autogen>--KeyToKey-- KeyCode::OPTION_R, KeyCode::ENTER, ModifierFlag::OPTION_L</autogen>
            </item>
          </list>
        </item>
      </list>
    </item>
    <item>
      <name>For Russian</name>
      <list>
        <item>
          <name>Change Backquote(`) Key</name>
          <list>
            <item>
              <name>Backquote(`) to Paragraph(§)</name>
              <identifier>remap.russian_backquote2paragraph</identifier>
              <autogen>--KeyToKey-- KeyCode::BACKQUOTE, KeyCode::RUSSIAN_PARAGRAPH</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Command_L Key</name>
          <list>
            <item>
              <name>Command_L to Command_L</name>
              <appendix>(+ When you type Command_L only, change inputmode to english)</appendix>
              <identifier>remap.russian_commandL2commandL_english</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Command_R Key</name>
          <list>
            <item>
              <name>Command_R to Command_R</name>
              <appendix>(+ When you type Command_R only, change inputmode to russian)</appendix>
              <identifier>remap.russian_commandR2commandR_russian</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Paragraph(§) Key</name>
          <list>
            <item>
              <name>Paragraph(§) to 1</name>
              <identifier>remap.russian_paragraph2one</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::KEY_1</autogen>
            </item>
            <item>
              <name>Paragraph(§) to Backquote(`)</name>
              <identifier>remap.russian_paragraph2backquote</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::BACKQUOTE</autogen>
            </item>
            <item>
              <name>Paragraph(§) to Escape</name>
              <identifier>remap.russian_paragraph2escape</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::ESCAPE</autogen>
            </item>
            <item>
              <name>Paragraph(§) to Forward Delete</name>
              <identifier>remap.russian_paragraph2forwarddelete</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_PARAGRAPH, KeyCode::FORWARD_DELETE</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Shift_L Key</name>
          <list>
            <item>
              <name>Shift_L to Shift_L</name>
              <appendix>(+ When you type Shift_L only, change inputmode to english)</appendix>
              <identifier>remap.russian_shiftL2shiftL_english</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
            </item>
            <item>
              <name>Shift_L to Shift_L</name>
              <appendix>(+ When you type Shift_L only, change inputmode to english)</appendix>
              <appendix></appendix>
              <appendix>(+ When you type Command+Shift_L only,</appendix>
              <appendix>change inputmode to "English - Ilya Birman Typography".)</appendix>
              <identifier>remap.russian_shiftL2shiftL_english_typography</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, VK_COMMAND, KeyCode::SHIFT_L, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH_TYPOGRAPHIC</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L,             KeyCode::SHIFT_L,                          KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Shift_R Key</name>
          <list>
            <item>
              <name>Shift_R to Shift_R</name>
              <appendix>(+ When you type Shift_R only, change inputmode to russian)</appendix>
              <identifier>remap.russian_shiftR2shiftR_russian</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN</autogen>
            </item>
            <item>
              <name>Shift_R to Shift_R</name>
              <appendix>(+ When you type Shift_R only, change inputmode to russian)</appendix>
              <appendix></appendix>
              <appendix>(+ When you type Command+Shift_R only,</appendix>
              <appendix>change inputmode to "Russian - Ilya Birman Typography".)</appendix>
              <identifier>remap.russian_shiftR2shiftR_russian_typography</identifier>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, VK_COMMAND, KeyCode::SHIFT_R, ModifierFlag::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN_TYPOGRAPHIC</autogen>
              <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R,             KeyCode::SHIFT_R,                          KeyCode::VK_CHANGE_INPUTMODE_RUSSIAN</autogen>
            </item>
          </list>
        </item>
        <item>
          <name>Change Tilde(~) Key</name>
          <list>
            <item>
              <name>Tilde(~) to Shift_L</name>
              <identifier>remap.russian_tilda2shiftL</identifier>
              <autogen>--KeyToKey-- KeyCode::RUSSIAN_TILDE, KeyCode::SHIFT_L</autogen>
            </item>
          </list>
        </item>

        <item>
          <name>Change Option_R+,(≤) to Comma(,) Key for Russian</name>
          <identifier>remap.change_option_r_plus_comma_to_comma_for_russian</identifier>
          <autogen>--KeyToKey-- KeyCode::COMMA, ModifierFlag::OPTION_R,
            KeyCode::KEY_6, VK_SHIFT</autogen>
        </item>
        <item>
          <name>Change Option_R+.(≥) to Dot(.) Key for Russian</name>
          <identifier>remap.change_option_r_plus_dot_to_dot_for_russian</identifier>
          <autogen>--KeyToKey-- KeyCode::DOT, ModifierFlag::OPTION_R,
            KeyCode::KEY_7, VK_SHIFT</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Slovenian</name>
      <list>
        <item>
          <name>Remap keyboard (symbol) shortcuts to standard Windows/Linux style</name>
          <appendix>(important characters only)</appendix>
          <appendix></appendix>
          <identifier>remap.slovenian_win_style_shortcuts</identifier>

          <inputmode_only>SLOVENIAN</inputmode_only>

          <appendix>Option_R (AltGr) + 1 = ~</appendix>
          <autogen>--KeyToKey-- KeyCode::KEY_1, ModifierFlag::OPTION_R,
            KeyCode::N, ModifierFlag::OPTION_L</autogen>

          <appendix>Option_R (AltGr) + 5 = °</appendix>
          <autogen>--KeyToKey-- KeyCode::KEY_5, ModifierFlag::OPTION_R,
            KeyCode::KEY_8, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

          <appendix>Shift_L + 7 = / and / = ' (plus hack for ? - second line)</appendix>
          <autogen>--KeyToKey-- KeyCode::KEY_7, VK_SHIFT,
            KeyCode::MINUS</autogen>
          <autogen>--KeyToKey-- KeyCode::MINUS, VK_SHIFT,
            KeyCode::MINUS, VK_SHIFT</autogen>
          <autogen>--KeyToKey-- KeyCode::MINUS,
            KeyCode::KEY_7, ModifierFlag::SHIFT_L</autogen>

          <appendix>Key between Y and Shift_L = &lt; &gt;</appendix>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, VK_SHIFT,
            KeyCode::RUSSIAN_TILDE, ModifierFlag::SHIFT_L</autogen>
          <autogen>--KeyToKey-- KeyCode::UK_SECTION, KeyCode::RUSSIAN_TILDE</autogen>

          <appendix>Option_R (AltGr) + Q = \</appendix>
          <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::OPTION_R,
            KeyCode::BACKSLASH, ModifierFlag::OPTION_L</autogen>

          <appendix>Option_R (AltGr) + W = |</appendix>
          <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::OPTION_R,
            KeyCode::BACKSLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

          <appendix>Option_R (AltGr) + E = €</appendix>
          <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::OPTION_R,
            KeyCode::KEY_5, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

          <appendix>Option_R (AltGr) + F = [ ... Option_R (AltGr) + G = ]</appendix>
          <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::OPTION_R,
            KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::OPTION_R,
            KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L</autogen>

          <appendix>Option_R (AltGr) + V = @</appendix>
          <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::OPTION_R,
            KeyCode::KEY_2, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

          <appendix>Option_R (AltGr) + B = { ... Option_R (AltGr) + N = }</appendix>
          <autogen>--KeyToKey-- KeyCode::B, ModifierFlag::OPTION_R,
            KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>

          <autogen>--KeyToKey-- KeyCode::N, ModifierFlag::OPTION_R,
            KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L</autogen>
        </item>
      </list>
    </item>

    <item>
      <name>For Spanish</name>
      <list>
        <item>
          <name>Change Option_R+4 to Ñ (Option_R+;)</name>
          <identifier>remap.pc_applicationoption4n</identifier>
          <autogen>--KeyToKey-- KeyCode::KEY_4, ModifierFlag::OPTION_R, KeyCode::SEMICOLON, ModifierFlag::OPTION_R</autogen>
        </item>
        <item>
          <name>Swap Ordinal-indicator(º) and Less-Than(&lt;)</name>
          <identifier>remap.spanish_swap_ordinal_indicator_lessthan</identifier>
          <autogen>--KeyToKey-- KeyCode::SPANISH_ORDINAL_INDICATOR, KeyCode::SPANISH_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::SPANISH_LESS_THAN, KeyCode::SPANISH_ORDINAL_INDICATOR</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Swedish</name>
      <list>
        <item>
          <name>Space to Option_L (when inputmode == swedish)</name>
          <identifier>remap.swedish_space2optionL_swedish</identifier>
          <inputmode_only>SWEDISH</inputmode_only>
          <autogen>--KeyToKey-- KeyCode::SPACE, KeyCode::OPTION_L</autogen>
        </item>
        <item>
          <name>Command_L to Command_L</name>
          <appendix>(+ When you type Command_L only, change inputmode to english)</appendix>
          <identifier>remap.swedish_commandL2commandL_english</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_L, KeyCode::COMMAND_L, KeyCode::VK_CHANGE_INPUTMODE_ENGLISH</autogen>
        </item>
        <item>
          <name>Command_R to Command_R</name>
          <appendix>(+ When you type Command_R only, change inputmode to swedish)</appendix>
          <identifier>remap.swedish_commandR2commandR_swedish</identifier>
          <autogen>--KeyOverlaidModifier-- KeyCode::COMMAND_R, KeyCode::COMMAND_R, KeyCode::VK_CHANGE_INPUTMODE_SWEDISH</autogen>
        </item>
        <item>
          <name>Swap Section(§) and Less-Than(&lt;)</name>
          <appendix>(only in virtual machine)</appendix>
          <identifier>remap.swedish_swap_section_lessthan_vm</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>--KeyToKey-- KeyCode::SWEDISH_SECTION, KeyCode::SWEDISH_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::SWEDISH_LESS_THAN, KeyCode::SWEDISH_SECTION</autogen>
        </item>
      </list>
    </item>
    <item>
      <name>For Swiss</name>
      <list>
        <item>
          <name>Swap Y and Z</name>
          <identifier>remap.swiss_swap_y_z</identifier>
          <autogen>--KeyToKey-- KeyCode::Y, KeyCode::Z</autogen>
          <autogen>--KeyToKey-- KeyCode::Z, KeyCode::Y</autogen>
        </item>
        <item>
          <name>Swap Section(§) and Less-Than(&lt;)</name>
          <appendix>(only in virtual machine)</appendix>
          <identifier>remap.swiss_swap_section_lessthan_vm</identifier>
          <only>VIRTUALMACHINE</only>
          <autogen>--KeyToKey-- KeyCode::SWISS_SECTION, KeyCode::SWISS_LESS_THAN</autogen>
          <autogen>--KeyToKey-- KeyCode::SWISS_LESS_THAN, KeyCode::SWISS_SECTION</autogen>
        </item>
        <item>
          <name>Change Section(§) to SHIFT+PC_INSERT</name>
          <appendix>(only in Citrix Online Plug-in for Mac)</appendix>
          <identifier>remap.swiss_section_insert_citrix</identifier>
          <only>CITRIX_ONLINE_PLUG_IN</only>
          <autogen>--KeyToKey-- KeyCode::SWISS_SECTION, KeyCode::PC_INSERT, ModifierFlag::SHIFT_L</autogen>
        </item>
        <item>
          <name>Change AltGr+2 to @</name>
          <appendix>(When Input Source is Swiss French or Swiss German)</appendix>
          <identifier>remap.altgr_2_to_atmark</identifier>
          <inputmode_only>SWISS</inputmode_only>
          <autogen>
            --KeyToKey--
            KeyCode::KEY_2, VK_OPTION | ModifierFlag::NONE,
            <!-- @ == option+g -->
            KeyCode::G, VK_OPTION
          </autogen>
        </item>
      </list>
    </item>

    <include system_xml_path="include/checkbox/samples.xml" />
  </list>
</root>
